
# The default master- and slave node sets are based on
# ansible_play_hosts.  Unfortunately, failing hosts are removed from
# that list as the play proceeds.  We don't want later tasks to work
# with different sets from earlier tasks so we register the sets in a
# fact.
- name: Determine atraf sets
  set_fact:
    atraf_master_node: "{{ atraf_master_node.split() }}"
    atraf_slave_nodes: "{{ atraf_slave_nodes.split() }}"
    atraf_nodes: "{{ atraf_master_node.split() + atraf_slave_nodes.split() }}"

- name: Get database details
  shell: "monetdb status -l {{atraf_db}} | sed -n -e 's/  connection uri: //p'"
  register: mapi_uri_details
  failed_when: not mapi_uri_details.stdout
  changed_when: False

- name: Figure out mapi uri
  set_fact:
    mapi_uri: "{{mapi_uri_details.stdout}}"

- name: Partition the data
  set_fact:
    partitioning: "{{ lookup('pipe', 'python partition.py subsets/' + atraf_subset + '/inputs.txt ' + (' '.join(atraf_slave_nodes) or atraf_master_node)) }}"

- name: Create work directories
  file:
    path: "{{item}}"
    state: directory
  with_items:
  - "{{atraf_dir}}"
  - "{{atraf_dir}}/sql"
  - "{{atraf_dir}}/answers"
  - "{{atraf_data_dir}}"

- name: Generate scripts
  template:
    src: "{{item}}.in"
    dest: "{{atraf_dir}}/{{item}}"
    mode: a+x
  with_items:
  - schema.sql
  - collect.sh
  - check.sh
  - bench.py

- name: Copy files
  synchronize:
    src: "{{item}}"
    dest: "{{atraf_dir}}"
  with_items:
  - sql

- name: Copy answers
  synchronize:
    src: "subsets/{{atraf_subset}}/"
    dest: "{{atraf_dir}}/answers"

# We need to download and decompress a rather large number of files
# so some parallellism is in order.
# Generate a Makefile so we can do make -j to do the work in parallel.

- name: Prepare data retrieval
  template:
    src: fetch-data.mk.in
    dest: "{{ atraf_data_dir }}/Makefile"

- name: Retrieve data
  command: make -C {{ atraf_data_dir }} -j{{ hostvars[inventory_hostname].get('ansible_processor_vcpus') or ansible_processor_cores }}
  register: retrieval_status
  changed_when: retrieval_status.rc == 0 and not "Nothing to be done for 'all'" in retrieval_status.stdout

- name: Load database
  tags:
  - load
  - loadonly
  command: "mclient -d {{atraf_db}} {{atraf_dir}}/schema.sql"
