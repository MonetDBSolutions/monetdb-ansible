# Makefile that knows how to download things

RSYNC=rsync -W -q
RSYNC_LOCATION={{rsync_location }}

MONET_TARBALL_FILE={{ monet_tarball_prefix }}-{{ monetdb_version }}.{{ system_spec }}.tar.bz2
MONET_TARBALL_URL=https://www.monetdbsolutions.com/downloads/HTM/$(MONET_TARBALL_FILE)

MONET_CHECKOUT_FILE=monetdb-checkout.tar.gz



# default is to download nothing
default:

all: kvm_host monetdb monetdb_checkout

#############################################################################
# Role kvm_host

kvm_host: {{centos_img_file}} {{qemu_efi_img_file}}

{{centos_img_file}}:
{% if rsync_location %}
	$(RSYNC) $(RSYNC_LOCATION)/qemu-images/$@ $@.tmp
{% else %}
	curl -s -o "$@.tmp" 'http://mirror.centos.org/altarch/7/isos/aarch64/CentOS-7-aarch64.img.xz'
{% endif %}
	mv $@.tmp $@

{{qemu_efi_img_file}}:
{% if rsync_location %}
	$(RSYNC) $(RSYNC_LOCATION)/qemu-images/$@ $@.tmp
{% else %}
	curl -s -o "$@.tmp" 'http://www.exanest.eu/wiki/images/c/c2/QEMU_EFI.fd.tar.gz'
{% endif %}
	mv $@.tmp $@

#############################################################################
# Role monetdb

monetdb: $(MONET_TARBALL_FILE).extracted

$(MONET_TARBALL_FILE).extracted: $(MONET_TARBALL_FILE)
	tar jxf $<
	touch $@

# TODO add to rsync
$(MONET_TARBALL_FILE):
	curl -s -o "$@.tmp" $(MONET_TARBALL_URL)
	mv $@.tmp $@

#############################################################################
# Role monetdb_checkout

monetdb_checkout: $(MONET_CHECKOUT_FILE)

# rsync creates the file atomically, no reason to muck around with .tmp files
$(MONET_CHECKOUT_FILE):
{% if rsync_location %}
	$(RSYNC) $(RSYNC_LOCATION)/$@ $@
{% else %}
{% endif %}

#############################################################################
# Air Traffic benchmark data
#
# The dataset is very large and every node needs a different subset
# The atraf_node role will ask us to download individual compressed files.

atraf-data/%.csv.xz:
{% if rsync_location %}
	$(RSYNC) $(RSYNC_LOCATION)/$@ $@
{% else %}
	@echo "Can only retrieve $@ over rsync!"
	exit 1
{% endif %}

atraf-data:
	mkdir -p $@

# This is for preloading
{% if atraf_subset is defined %}
atraf:{% for file in atraf_inputs.stdout_lines %} atraf-data/{{file}}.xz{% endfor %}
{% endif %}
